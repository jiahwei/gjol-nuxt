/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/bulletins/query": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Query
         * @description 根据公告ID查询公告信息
         *
         *     Args:
         *         bulletin_id (int): 公告ID
         *
         *     Returns:
         *         BulletinDB: 公告信息对象
         */
        get: operations["query_bulletins_query_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bulletins/byDate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Bulletin By Date
         * @description 根据公告日期查询公告信息
         *
         *     Args:
         *         payload (DatePayload): 公告日期载荷，包含开始日期和结束日期
         *
         *     Returns:
         *         list[BulletinDB]: 符合日期条件的公告列表
         */
        post: operations["bulletin_by_date_bulletins_byDate_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bulletins/listInVersion": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List In Version
         * @description 获取按版本分组的公告列表
         *
         *     Returns:
         *         list[ListInVersionReturn]: 按版本分组的公告列表
         */
        get: operations["list_in_version_bulletins_listInVersion_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bulletins/new": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * New Bulletin
         * @description 获取最新的公告信息
         *
         *     Returns:
         *         BulletinInfo: 最新公告的详细信息
         */
        get: operations["new_bulletin_bulletins_new_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dev/testResolve": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Test Resolve
         * @description 测试解析公告的路由
         *     Args:
         *         test_date (str | None): 测试的日期，默认为None, 表示测试所有公告
         */
        get: operations["test_resolve_dev_testResolve_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dev/tranModel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Tran Model
         * @description 训练模型
         */
        get: operations["tran_model_dev_tranModel_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dev/fixBulletinRanks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Test Bulletin Ranks
         * @description 排序版本
         */
        get: operations["test_bulletin_ranks_dev_fixBulletinRanks_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dev/fixAllBulletin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Fix All Bulletin
         * @description 补全全部公告
         */
        get: operations["fix_all_bulletin_dev_fixAllBulletin_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Root */
        get: operations["root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** BaseBulletinInfo */
        BaseBulletinInfo: {
            /**
             * Date
             * @default
             */
            date: string;
            /**
             * Orderid
             * @default 0
             */
            orderId: number;
            /**
             * Totallen
             * @default 0
             */
            totalLen: number;
        };
        /**
         * BulletinDB
         * @description 公告数据库模型
         *     公告数据库模型，用于存储公告相关的数据
         *
         *     Attributes:
         *         id: 公告id
         *         bulletin_date: 公告日期，被方法get_really_bulletin_date处理过的方法，它会把日期格式化成周四
         *         original_date: 原始公告日期
         *         total_leng: 公告总长度
         *         content_total_arr: 公告内容总数组
         *         bulletin_name: 公告名称
         *         version_id: 版本id
         *         type: 公告类型
         */
        BulletinDB: {
            /** Id */
            id?: number | null;
            /** Bulletin Date */
            bulletin_date: string;
            /** Original Date */
            original_date: string;
            /** Total Leng */
            total_leng: number;
            /** Content Total Arr */
            content_total_arr: string;
            /** Bulletin Name */
            bulletin_name?: string | null;
            /** Version Id */
            version_id: number;
            /**
             * Type
             * @default routine
             */
            type: string;
        };
        /** BulletinInfo */
        BulletinInfo: {
            /**
             * Date
             * @default
             */
            date: string;
            /**
             * Orderid
             * @default 0
             */
            orderId: number;
            /**
             * Totallen
             * @default 0
             */
            totalLen: number;
            /** Id */
            id: number | null;
            /** Name */
            name: string | null;
            /** Order */
            order: number;
            /** Order By Date */
            order_by_date: number;
            /** Contenttotalarr */
            contentTotalArr?: components["schemas"]["ContentTotal"][] | null;
            /** Versionid */
            versionId?: number | null;
            /** Versionname */
            versionName?: string | null;
            /**
             * Type
             * @default routine
             */
            type: string;
        };
        /** ContentTotal */
        ContentTotal: {
            type: components["schemas"]["ParagraphTopic"];
            /** Leng */
            leng: number;
            /** Content */
            content: string[];
        };
        /** DatePayload */
        DatePayload: {
            /** Startdate */
            startDate?: string | null;
            /** Enddate */
            endDate?: string | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * ListInVersionReturn
         * @description listInVersion 接口的返回参数
         *
         *     Args:
         *         id (int | None): 版本ID
         *         acronyms (str): 版本名称
         *         date (str): 版本日期
         *         total_version_len (int, optional): 版本总长度. Defaults to 0.
         *         list (list[BaseBulletinInfo], optional): 公告列表. Defaults to [].
         */
        ListInVersionReturn: {
            /** Id */
            id: number | null;
            /** Acronyms */
            acronyms: string;
            /** Date */
            date: string;
            /**
             * Totalversionlen
             * @default 0
             */
            totalVersionLen: number;
            /** List */
            list: components["schemas"]["BaseBulletinInfo"][];
        };
        /**
         * ParagraphTopic
         * @enum {string}
         */
        ParagraphTopic: "开头" | "署名/结尾" | "无更新" | "商城/外观" | "通用调整" | "职业调整" | "斗法调整" | "秘境调整" | "活动更新";
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    query_bulletins_query_get: {
        parameters: {
            query?: {
                bulletin_id?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BulletinDB"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    bulletin_by_date_bulletins_byDate_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DatePayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BulletinDB"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_in_version_bulletins_listInVersion_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ListInVersionReturn"][];
                };
            };
        };
    };
    new_bulletin_bulletins_new_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BulletinInfo"];
                };
            };
        };
    };
    test_resolve_dev_testResolve_get: {
        parameters: {
            query?: {
                testDate?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string | components["schemas"]["BulletinDB"][];
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    tran_model_dev_tranModel_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    test_bulletin_ranks_dev_fixBulletinRanks_get: {
        parameters: {
            query: {
                version_id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    fix_all_bulletin_dev_fixAllBulletin_get: {
        parameters: {
            query?: {
                pageNum?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
}
